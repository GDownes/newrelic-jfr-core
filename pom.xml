<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.newrelic.telemetry</groupId>
    <artifactId>newrelic-jfr-mappers</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <name>jfr-mappers</name>
    <organization>
        <name>newrelic</name>
    </organization>

    <description>Java Flight Recorder (JFR) Mappers for New Relic</description>
    <url>https://newrelic.com/</url>
    <licenses>
        <license>
            <!-- FIXME Apache 2 -->
            <name>Proprietary</name>
            <distribution>manual</distribution>
            <comments>Open Source licenses can be found in LICENSE and THIRD_PARTY_NOTICES.md</comments>
        </license>
    </licenses>
    <developers>
        <developer>
            <name>New Relic, Inc</name>
        </developer>
    </developers>
    <scm>
        <url>scm:internal</url>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <junit.version>5.6.0</junit.version>
        <telemetry.version>0.5.1</telemetry.version>
        <gson.version>2.8.6</gson.version>
    </properties>
    <repositories>
        <repository>
            <id>newrelic</id>
            <url>https://pdx-artifacts.pdx.vm.datanerd.us/repo</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <dependencies>
        <dependency>
            <groupId>com.newrelic.telemetry</groupId>
            <artifactId>telemetry</artifactId>
            <version>${telemetry.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>3.2.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>generate-source-jar</id>
                        <goals><goal>jar-no-fork</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <archive>
                        <addMavenDescriptor>false</addMavenDescriptor>
                    </archive>
                    <!-- We want an empty sources jar; there's no reason to publish sources for anything -->
                    <forceCreation>true</forceCreation>
                    <excludes>**</excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <!-- We want an empty javadoc jar; there's no reason to publish javadoc for anything -->
                        <id>empty-javadoc-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <archive>
                                <addMavenDescriptor>false</addMavenDescriptor>
                            </archive>
                            <forceCreation>true</forceCreation>
                            <excludes>**</excludes>
                            <classifier>javadoc</classifier>
                        </configuration>
                    </execution>
                    <execution>
                        <id>primary-jar</id>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <!-- deployment. Staging to nexus requires everything to come from the same IP
                 and Chicago VPN breaks that! This plugin should help. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <!-- By default, this is the phase deploy goal will bind to -->
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <serverId>sonatype-staging</serverId>
                    <stagingProfileId>99c671e2ec9d3</stagingProfileId>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/**</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                            </transformers>
                            <relocations>
                            </relocations>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <distributionManagement>
      <repository>
          <id>sonatype-staging</id>
          <name>New Relic sonatype staging</name>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        <layout>default</layout>
      </repository>
        <snapshotRepository>
            <id>newrelic-snapshots</id>
            <name>New Relic repository</name>
            <url>https://pdx-artifacts.pdx.vm.datanerd.us/newrelic-snapshot-local</url>
            <layout>default</layout>
        </snapshotRepository>
    </distributionManagement>
</project>
